#!/bin/bash
set -bEu -o pipefail

# Christopher Lee
# "smoke tests" a gbib or gbic Genome Browser with a Selenium Script
# If gbic option is passed, installs a Genome Browser mirror and
#    runs a Selenium script against it

# Global vars
MACHINES=[]
LOC=""

# runs vagrant commands to setup all or specific machines
#function setupVMs () {}

# installs Genome Browser on specific machine
function installBrowser () 
{
   vagrant ssh machineName -- sudo bash browserSetup.sh -b install
}

function showHelp ()
{
   cat << EOF
Usage: $0 [-h] -w [gbic|gbib] -m [ubuntu|centos|all]

   -h          Show this help and exit
   -w website  Test which instance of the Genome Browser we are testing.
               gbib uses the url http://127.0.0.1:1234
               gbic uses the -m parameter to find url
   -m machine  Which machine to test. By default tests all machines:
                  Ubuntu 14/16
                  Centos 6/7
               If "ubuntu" or "centos" is given we test both machines of that type.
               Only applicable if -w gbic is supplied.

Performs basic automated test of Genome Browser instance:
   Loads hgTracks and click into hgGene for Human and Mouse.
   Loads an hg19 custom track and checks that hgTracks loads.
   Loads a track hub and checks that hgTracks loads.
   Runs a blat against hg19.
   Runs an isPCR against hg19.
   Tests hgConvert and hgLiftOver.

These tests should run reasonably quickly so you can watch that they are running
and completing correcly.
EOF
}

# parse command line
OPTIND=1
while getopts "hw:m:" opt
do 
   case $opt in
      h)
         showHelp
         exit 0
         ;;
      w)
         LOC=$OPTARG
         ;;
      m)
         MACHINE=$OPTARG
         ;;
      '?')
         showHelp >&2
         exit 1
         ;;
   esac
done

if [ $OPTIND -eq 1 ]; then
   showHelp >&2
   exit 1
fi

### MAIN ###

# parse command line for errors and set machines var

if [ $LOC == "gbib" ]; then
   # just run test against http://127.0.0.1:1234, assumes vm already running
   curl -I "http://127.0.0.1:1234" &> /dev/null
   if [ $? -eq 0 ]; then
      /usr/bin/python gbibTest.py 
   else
      printf "GBiB not started yet. Please start your GBiB before running this test.\n"
   fi
#else
   # start vms and run tests
#   setupVMs
#   installBrowser # vagrant ssh -- touch testfile.txt is the syntax
#   for machine in machines
#      do
#         python genomeTest.py url
#   done
fi
